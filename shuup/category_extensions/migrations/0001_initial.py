# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-10-26 02:14
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import shuup.utils.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('shuup', '0010_update_managers'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryPopulator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shuup.Category')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryPopulatorRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributePopulatorRule',
            fields=[
                ('categorypopulatorrule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='category_extensions.CategoryPopulatorRule')),
                ('operator', enumfields.fields.EnumIntegerField(default=1, enum=shuup.utils.enums.ComparisonOperator, verbose_name='operator')),
                ('product_attr_name', models.CharField(max_length=255, verbose_name='product attribute name')),
                ('attribute', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shuup.Attribute', verbose_name='attribute')),
            ],
            options={
                'abstract': False,
            },
            bases=('category_extensions.categorypopulatorrule',),
        ),
        migrations.CreateModel(
            name='CreationDatePopulatorRule',
            fields=[
                ('categorypopulatorrule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='category_extensions.CategoryPopulatorRule')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(verbose_name='end date')),
            ],
            options={
                'abstract': False,
            },
            bases=('category_extensions.categorypopulatorrule',),
        ),
        migrations.CreateModel(
            name='ManufacturerPopulatorRule',
            fields=[
                ('categorypopulatorrule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='category_extensions.CategoryPopulatorRule')),
                ('manufacturers', models.ManyToManyField(to='shuup.Manufacturer', verbose_name='manufacturer')),
            ],
            options={
                'abstract': False,
            },
            bases=('category_extensions.categorypopulatorrule',),
        ),
        migrations.AddField(
            model_name='categorypopulatorrule',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_category_extensions.categorypopulatorrule_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='categorypopulator',
            name='rules',
            field=models.ManyToManyField(to='category_extensions.CategoryPopulatorRule'),
        ),
    ]
