{% extends "shuup/admin/base.jinja" %}

{% macro render_children(category) %}
{% set children = category.get_children() %}
<div class="category-list">
{%- if children|length -%}
    {%- for child in children -%}
    {%- if child.is_visible(customer) -%}
        {{- render_item(child, nested=True)  -}}
    {%- endif -%}
    {%- endfor %}
{%- endif -%}
</div>
{% endmacro %}

{% macro render_item(category, nested=False) %}
<div class="category-item" data-id="{{ category.id }}" data-visible-in-menu="{{ category.visible_in_menu|int }}">
    <div class="category-detail">
        <div class="category-handle">
            <i class="fa fa-reorder"></i>
        </div>
        <div class="category-image">
            {% if category.image %}
                <img src="{{ category.image.url }}" />
            {% else %}
                <img src="{{ static("shuup_admin/img/no_image_thumbnail.png") }}" />
            {% endif %}
        </div>
        <div class="category-name">{{ category.name }}</div>
        <div class="category-status">
            {% set visible_in_menu = (category.visible_in_menu) %}
            <a class="btn btn-status-change btn-show {{ 'd-none' if visible_in_menu else '' }}" href="#">{{ _("Show in Menu") }}</a>
            <a class="btn btn-status-change btn-hide {{ '' if visible_in_menu else 'd-none' }}" href="#">{{ _("Hide from Menu") }}</a>
        </div>
    </div>
    {{ render_children(category) }}
</div>
{% endmacro %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="content-block" id="categories-organizer-list">
                <div class="d-none d-md-block d-lg-block d-xl-block">
                    <p>{% trans %}Drag and drop categories below to sort and change the hierarchy. Make sure to Save to apply the changes.{% endtrans %}</p>
                    <p>{% trans %}You can also change the menu visibility of categories through buttons.{% endtrans %}</p>
                    <div class="category-list" id="main-category-list">
                        {% for category in categories %}
                            {{ render_item(category) }}
                        {% endfor %}
                    </div>
                </div>
                <div class="d-lg-none">
                    <div class="text-center text-muted"><i class="fa fa-mobile fa-3x"></i></div>
                    <div class="text-center"><i class="fa fa-warning"></i> {% trans %}Sorry, this view is not supported on small screen devices.{% endtrans %}</div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block extra_js %}
<script>
    $(function() {
        window.html5sortable(".category-list", {
            forcePlaceholderSize: true,
            placeholderClass: "placeholder",
            items: ".category-item",
            acceptFrom: ".category-list",
            placeholder: '<div class="placeholder"></div>',
            containerSerializer: function (serializedContainer) {
                return null;
            },
            itemSerializer: function (serializedItem, sortableContainer) {
                var childrenList = $(serializedItem.node).children(".category-list");
                var serializedChildren = [];
                for (var ix = 0; ix < childrenList.length; ix += 1) {
                    var serialized = window.html5sortable(childrenList[ix], "serialize");
                    if (serialized && serialized.length && serialized[0].items.length) {
                        serializedChildren.push(serialized[0]);
                    }
                }
                var node = $(serializedItem.node);
                return {
                    id: node.data("id"),
                    visible_in_menu: node.data("visible-in-menu"),
                    position: serializedItem.index + 1,
                    children: serializedChildren
                }
            }
        });

        $(".category-list").on("sortstart", function (evt) {
            $("#main-category-list").addClass("dragging");
        });

        $(".category-list").on("sortstop", function (evt) {
            $(".category-list").removeClass("dragging");

            $(".category-list").each(function(indexc, el) {
                if (!$(el).children().length) {
                    $(el).empty();
                }
            });
        });

        $(".btn-show").click(function (evt) {
            evt.preventDefault();
            $(evt.target).closest(".category-item").attr("data-visible-in-menu", "1");
            $(evt.target).siblings(".btn-hide").removeClass("d-none");
            $(evt.target).addClass("d-none");
        });

        $(".btn-hide").click(function (evt) {
            evt.preventDefault();
            $(evt.target).closest(".category-item").attr("data-visible-in-menu", "0");
            $(evt.target).siblings(".btn-show").removeClass("d-none");
            $(evt.target).addClass("d-none");
        });

        function parseChildren(children) {
            var nodes = []
            if (!children) {
                return nodes;
            }
            for (var x = 0; x < children.length; x += 1) {
                if (children[x].items) {
                    for (var y = 0; y < children[x].items.length; y += 1) {
                        nodes.push(parseNode(children[x].items[y]));
                    }
                }
            }
            return nodes;
        }

        function parseNode(node) {
            return {
                id: node.id,
                position: node.position,
                visible_in_menu: node.visible_in_menu,
                children: parseChildren(node.children)
            };
        }

        window.saveCategories = function () {
            var rootNodes = [];
            var serialized = window.html5sortable('#main-category-list', 'serialize')[0];
            for (var ix = 0; ix < serialized.items.length; ix += 1) {
                rootNodes.push(parseNode(serialized.items[ix]));
            }
            var form = document.createElement("form");
            var payloadInput = document.createElement("input");
            var csrfInput = document.createElement("input");

            form.method = "POST";
            form.action = "{{ url('shuup_admin:category.organize') }}";

            payloadInput.name = "payload";
            payloadInput.value = JSON.stringify(rootNodes);

            csrfInput.name = "csrfmiddlewaretoken";
            csrfInput.value = "{{ csrf_token }}";

            form.appendChild(payloadInput);
            form.appendChild(csrfInput);

            document.body.appendChild(form);
            form.submit();
        };
    });
</script>
{% endblock %}
