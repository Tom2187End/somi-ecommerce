name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  codestyle:
    name: "Code style & sanity checks"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install dependencies
      run: pip install -r requirements-dev.txt
    - name: Run sanity check
      run: _misc/check_sanity.py
    - name: Run license headers check
      run: _misc/ensure_license_headers.py -s shuup
    - name: Check flake8
      run: flake8 .
    - name: Check isort
      run: isort --check --diff .
    - name: Check black
      run: black --check --diff .

  core:
    name: "Test Shuup, migrations and messages"
    runs-on: ubuntu-latest
    env:
      SHUUP_BROWSER_TESTS: 0
      SHUUP_TESTS_CI: 1
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install gettext
      run: sudo apt-get -y install gettext
    - name: Install test dependencies
      run: pip install -r requirements-tests.txt
    - name: Run migrations
      run: python -m shuup_workbench migrate
    - name: Run makemessages
      run: python -m shuup_workbench shuup_makemessages -l en
    - name: Run tests
      run: py.test --nomigrations shuup_tests --cov shuup --cov-config=.coveragerc
    - name: Run compilemessages
      run: python -m shuup_workbench compilemessages
    - name: Code coveragerc
      run: codecov

  # browser:
  #   name: "Test Shuup with browser"
  #   runs-on: ubuntu-latest
  #   env:
  #     SHUUP_BROWSER_TESTS: 1
  #     SHUUP_TESTS_CI: 1
  #     SHUUP_WORKBENCH_DISABLE_MIGRATIONS: 1
  #   strategy:
  #     matrix:
  #       python-version: ['3.6']
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Setup Chrome Driver
  #     uses: nanasess/setup-chromedriver@master
  #   - name: Install gettext
  #     run: sudo apt-get -y install gettext
  #   - name: Build static files
  #     run: python setup.py build_resources
  #   - name: Install test dependencies
  #     run: pip install -r requirements-tests.txt
  #   - name: Build messages
  #     run: python setup.py build_messages
  #   - name: Set env
  #     run: echo "DISPLAY=:99.0" >> $GITHUB_ENV
  #   - name: Run tests
  #     run: py.test -v --nomigrations shuup_tests/browser/ --splinter-webdriver=chrome --splinter-screenshot-dir=.browser_tests/
  #   - uses: actions/upload-artifact@v2
  #     if: failure()
  #     with:
  #       name: browser_tests
  #       path: .browser_tests/*.*
